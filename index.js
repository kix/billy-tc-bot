const TelegramBot = require('node-telegram-bot-api');
const BotMechanics = require('./src/botMechanics.js');
const config = require('./config.json');

const bot = new TelegramBot(config['telegram-token'], { polling: true });
const botMechanics = new BotMechanics();

const defaultErrorMessage = '‚ö† –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø—Ä–æ–≤–µ—Ä—å /status';

bot.onText(/(\/start)|(\/help)/, msg => {
    let message = '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–º–∞–Ω–¥—ã:' +
        '\n/ping - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å' +
        '\n/status - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å' +
        '\n/branch <BranchName> - –∑–∞–¥–∞—Ç—å –≤–µ—Ç–∫—É' +
        '\n/tests - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ—Å—Ç—ã';

    bot.sendMessage(msg.chat.id, message);
});

bot.onText(/\/ping/, msg => {
    bot.sendMessage(msg.chat.id, "–Ø –∑–¥–µ—Å—å üëã");
});

bot.onText(/\/branch (.+)/, function (msg, match) {
    const branch = match[1];
    botMechanics.setBranch(branch);
    botMechanics.initTeamCityClient();

    bot.sendMessage(msg.chat.id, `–í–µ—Ç–∫–∞ ¬´${branch}¬ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ üëå`);
});

bot.onText(/\/tests/, msg => {
    botMechanics
        .checkLastUnitTest()
        .then(message => {
            bot.sendMessage(msg.chat.id, message, {'parse_mode': 'Markdown'});
        })
        .catch(e => {
            bot.sendMessage(msg.chat.id, defaultErrorMessage + '\n' + e);
        });
});

bot.onText(/\/status/, msg => {
    bot.sendMessage(msg.chat.id, botMechanics.getStatusMessage());
});
