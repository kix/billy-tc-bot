const TelegramBot = require('node-telegram-bot-api');
const BotMechanics = require('./src/botMechanics.js');
const config = require('./config.json');

const bot = new TelegramBot(config['telegram-token'], { polling: true });
const botMechanics = new BotMechanics(bot);

bot.onText(/(\/start)|(\/help)/, msg => {
    const message = '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–º–∞–Ω–¥—ã:' +
        '\n/ping - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å' +
        '\n/status - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å' +
        '\n/branch `<BranchName>` - –∑–∞–¥–∞—Ç—å –≤–µ—Ç–∫—É' +
        '\n/tests - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ—Å—Ç—ã' +
        '\n/watchon - –Ω–∞–±–ª—é–¥–∞—Ç—å –∑–∞ –±–∏–ª–¥–∞–º–∏ –≤–µ—Ç–∫–∏' +
        '\n/watchoff - –æ—Ç–∫–ª—é—á–∏—Ç—å –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –±–∏–ª–¥–∞–º–∏ –≤–µ—Ç–∫–∏';

    bot.sendMessage(msg.chat.id, message, {'parse_mode': 'Markdown'});
});

bot.onText(/\/ping/, msg => {
    bot.sendMessage(msg.chat.id, "–Ø –∑–¥–µ—Å—å üëã");
});

bot.onText(/\/branch (.+)/, function (msg, match) {
    const chatId = msg.chat.id;
    const branch = match[1];

    botMechanics.setBranch(chatId, branch);
    botMechanics.initTeamCityClient(chatId);

    bot.sendMessage(chatId, `–í–µ—Ç–∫–∞ ¬´${branch}¬ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ üëå`);
});

bot.onText(/\/tests/, msg => {
    botMechanics.checkLastUnitTest(msg.chat.id);
});

bot.onText(/\/watchon/, msg => {
    botMechanics.addBuildWatcher(msg.chat.id);
});

bot.onText(/\/watchoff/, msg => {
    botMechanics.removeBuildWatcher(msg.chat.id);
});

bot.onText(/\/status/, msg => {
    const chatId = msg.chat.id;

    bot.sendMessage(chatId, botMechanics.getStatusMessage(chatId), {'parse_mode': 'Markdown'});
});
